"""Add api_key to installations

Revision ID: ac302fef1f56
Revises: cafef4de6f41
Create Date: 2025-08-11 00:53:42.151728

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'ac302fef1f56'
down_revision = 'cafef4de6f41'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # Add the column as nullable first
    op.add_column('installations', sa.Column('api_key', sa.String(length=255), nullable=True))
    
    # Populate existing records with unique api_keys
    import secrets
    connection = op.get_bind()
    
    # Get all installations and generate unique api_keys
    result = connection.execute(sa.text("SELECT id FROM installations"))
    installations = result.fetchall()
    
    for installation in installations:
        api_key = f"inst_{secrets.token_urlsafe(32)}"
        connection.execute(
            sa.text("UPDATE installations SET api_key = :api_key WHERE id = :id"),
            {"api_key": api_key, "id": installation[0]}
        )
    
    # Now make the column NOT NULL
    op.alter_column('installations', 'api_key', nullable=False)
    
    # Create the unique index
    op.create_index(op.f('ix_installations_api_key'), 'installations', ['api_key'], unique=True)


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_installations_api_key'), table_name='installations')
    op.drop_column('installations', 'api_key')
    # ### end Alembic commands ###