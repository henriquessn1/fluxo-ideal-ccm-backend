version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: monitoring_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-monitoring_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-monitoring_pass}
      POSTGRES_DB: ${DB_NAME:-monitoring_db}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-monitoring_user} -d ${DB_NAME:-monitoring_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: monitoring_redis
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    container_name: monitoring_app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    ports:
      - "${APP_PORT:-9001}:9001"
    volumes:
      - ./app:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 9001 --reload

  celery_worker:
    build: .
    container_name: monitoring_celery_worker
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./app:/app
    command: celery -A app.tasks.celery_app worker --loglevel=info

  celery_beat:
    build: .
    container_name: monitoring_celery_beat
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./app:/app
    command: celery -A app.tasks.celery_app beat --loglevel=info

volumes:
  postgres_data:
  redis_data: